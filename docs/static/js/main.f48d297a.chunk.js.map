{"version":3,"sources":["types/types.js","firebase/firebase-config.js","actions/ui.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","actions/auth.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","components/routers/AuthRouter.js","components/routers/PrivateRoute.js","components/routers/PublicRoute.js","components/routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["types","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","setError","err","type","payload","removeError","finishLoading","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","addNewNote","note","activeNote","startLodingNotes","dispatch","setNotes","startSaveNotes","getState","url","noteToFirestore","doc","update","Swal","fire","message","refreshNote","title","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","console","log","login","displayName","catch","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","NotesAppBar","useDispatch","active","useSelector","state","date","moment","className","format","style","display","onChange","e","files","text","showCloseButton","showCancelButton","willOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","placeholder","autoComplete","autoFocus","src","alt","delete","startDeleting","NothingSelected","JournalEntry","noteDate","backgroundSize","backgroundImage","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","LoginScreen","loading","ui","formValues","isFormValid","validator","isEmail","length","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","password2","trim","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f48d297a.chunk.js","sourcesContent":["export const types = {\r\n    login: '[Auth] login',\r\n    logout: '[Auth] logout',\r\n\r\n    uiSetError: '[UI] Set error',\r\n    uiRemoveSetError: '[UI] Remove error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Updated note saved',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogeoutCleaning: '[Notes] Logout Cleaning',\r\n\r\n}","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBawE919p-enUEJH1YbfH7nFaOzfUDePfE\",\r\n    authDomain: \"react-apps-adb17.firebaseapp.com\",\r\n    projectId: \"react-apps-adb17\",\r\n    storageBucket: \"react-apps-adb17.appspot.com\",\r\n    messagingSenderId: \"206947590393\",\r\n    appId: \"1:206947590393:web:c7033755adf3ee2825c228\"\r\n  };\r\n\r\n   // Initialize Firebase\r\n   firebase.initializeApp(firebaseConfig);\r\n\r\n   const db = firebase.firestore();\r\n   const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n   export {\r\n       db,\r\n       googleAuthProvider,\r\n       firebase\r\n   }","import { types } from \"../types/types\";\r\n\r\n\r\nexport const setError = ( err ) => ({\r\n\r\n    type: types.uiSetError,\r\n    payload: err\r\n\r\n})\r\n\r\nexport const removeError = ( ) => ({\r\n\r\n    type: types.uiRemoveSetError\r\n\r\n})\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})","\r\n\r\nexport const fileUpload = async(file) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/duz1ltpz4/upload';\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('upload_preset','react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        \r\n        const resp = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if (resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        }\r\n        else{\r\n            throw await resp.json();\r\n        }\r\n\r\n    } catch (error) {\r\n        // Swal.fire('Error', error.message, 'error');\r\n        throw error;\r\n    }\r\n\r\n}","import { db } from \"../firebase/firebase-config\"\r\n\r\nexport const loadNotes = async( uid ) => {\r\n\r\n    const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\r\n\r\n    const notes = [];\r\n\r\n    notesSnap.forEach( snapHijo => {\r\n        \r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n        \r\n    } );\r\n\r\n    return notes;\r\n}","import Swal from \"sweetalert2\";\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const startNewNote = () => {\r\n    //getState nos provee el state de redux\r\n    return async (dispatch, getState) => {\r\n\r\n        const uid = getState().auth.uid;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n\r\n        dispatch(activeNote(doc.id, newNote));\r\n\r\n        //Agrega la nueva nota al arregloy lo muestra en el sidebar en tiempo real\r\n        dispatch(addNewNote(doc.id, newNote));\r\n    }\r\n}\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const activeNote = (id, note) => ({\r\n\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n\r\n});\r\n\r\nexport const startLodingNotes = (uid) => {\r\n    return async (dispatch) => {\r\n\r\n        //carga de las notas desde firestore\r\n        const notes = await loadNotes(uid);\r\n\r\n        dispatch(setNotes(notes));\r\n\r\n    }\r\n}\r\n\r\nexport const setNotes = (notes) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n})\r\n\r\nexport const startSaveNotes = (note) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        if (!note.url) {\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        try {\r\n            await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\r\n        } catch (error) {\r\n            Swal.fire('Error', error.message, 'error');\r\n        }\r\n\r\n        dispatch(refreshNote(note.id, noteToFirestore));\r\n\r\n        Swal.fire('Saved', note.title, 'success');\r\n\r\n    }\r\n}\r\n\r\nexport const refreshNote = (id, note) => ({\r\n\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n\r\n})\r\n\r\nexport const startUploading = (file) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { active: activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            showCloseButton: false,\r\n            showCancelButton: false,\r\n            willOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        })\r\n\r\n        const fileUrl = await fileUpload(file);\r\n\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch(startSaveNotes(activeNote));\r\n\r\n        Swal.close();\r\n\r\n    }\r\n}\r\n\r\nexport const startDeleting = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const uid = getState().auth.uid;\r\n\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch(deleteNote(id));\r\n\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n\r\n    type: types.notesDelete,\r\n    payload: id\r\n\r\n})\r\n\r\nexport const noteLoggout = () => ({\r\n    type: types.notesLogeoutCleaning\r\n})","import { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2';\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport { finishLoading, startLoading } from \"./ui\";\r\nimport { noteLoggout } from \"./notes\";\r\n\r\n\r\n//Se crea una acción que dispara otra acción cuando se resuelve la tarea asíncrona\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch(startLoading());\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(({user}) => {\r\n                console.log(user);\r\n                dispatch(\r\n                    \r\n                    login(user.uid, user.displayName)\r\n\r\n                )\r\n                dispatch(finishLoading());\r\n            }).catch(err => {\r\n                Swal.fire('Error', err.message, 'error');\r\n                dispatch(finishLoading());\r\n                \r\n            });\r\n\r\n    }\r\n}\r\n\r\n//Crea la autenticación al registrar un usuario\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(async ({ user }) => {\r\n                await user.updateProfile({ displayName: name });\r\n                dispatch(\r\n\r\n                    login(user.uid, user.displayName)\r\n\r\n                )\r\n            }).catch(err => {\r\n                console.log(err)\r\n                Swal.fire('Error', err.message, 'error');\r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then(({ user }) => {\r\n                dispatch(\r\n\r\n                    login(user.uid, user.displayName)\r\n\r\n                )\r\n            });\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => {\r\n    return {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n\r\n    return async ( dispatch ) => {\r\n\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch( logout() );\r\n        dispatch( noteLoggout() );\r\n    }\r\n\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState) => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        })\r\n\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n}\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startSaveNotes, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { active } = useSelector(state => state.notes);\r\n\r\n    const date = moment(active.date);\r\n\r\n    const handleSave = () => {\r\n        \r\n        dispatch(startSaveNotes( active ));\r\n    }\r\n\r\n    const handlePictureClick = () => {\r\n\r\n        document.querySelector('#fileSelector').click();\r\n\r\n    }\r\n\r\n    const handleFileChange = (e) =>{\r\n        const file = e.target.files[0];\r\n\r\n        if(file){\r\n            dispatch(startUploading(file));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>{ date.format('LL') }</span>\r\n\r\n            <input\r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{display: 'none'}}\r\n                onChange={ handleFileChange }\r\n            \r\n            />\r\n            <div>\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={ handlePictureClick }\r\n                >\r\n                    Picture\r\n                </button>\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick= { handleSave }\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { active: note } = useSelector(state => state.notes);\r\n\r\n    const [values, handleInputChange, reset] = useForm(note);\r\n\r\n    const { title, body, id } = values;\r\n\r\n    //Hacemos que se mantenga la referencia a la nota que se está mostrando\r\n    const activeId = useRef(note.id);\r\n\r\n    //Se lanza el efecto que actualiza la nota mostrada si esta es seleccionada\r\n    useEffect(() => {\r\n        if (note.id !== activeId.current) {\r\n            reset(note);\r\n            activeId.current = note.id;\r\n        }\r\n\r\n    }, [reset, note])\r\n\r\n    //Actualiza la nota activa\r\n    useEffect(() => {\r\n\r\n        dispatch(activeNote(values.id, { ...values }));\r\n\r\n    }, [values, dispatch]);\r\n\r\n\r\n    const handleDelete = () => {\r\n\r\n        dispatch(startDeleting(id));\r\n    }\r\n\r\n    return (\r\n        <div className=\"note__main-content\">\r\n            <NotesAppBar />\r\n            <div className=\"notes__content\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus={true}\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What happened today\"\r\n                    className=\"notes__textarea\"\r\n                    name=\"body\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                >\r\n\r\n                </textarea>\r\n\r\n                {\r\n                    note.url &&\r\n                    <div className=\"notes__image\">\r\n                        <img\r\n                            src={note.url}\r\n                            alt=\"imagen\"\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick={handleDelete}\r\n            >\r\n                Delete\r\n                </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br/>\r\n                or create a new one!\r\n\r\n                \r\n\r\n            </p>\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { activeNote } from '../../actions/notes';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const JournalEntry = ({ id, title, body, date, url }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const noteDate = moment(date);\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch(activeNote(id, { title, body, date, url }));\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className=\"journal__entry pointer animate__animated animate__fadeInLeft\"\r\n            onClick={handleEntryClick}\r\n        >\r\n            {\r\n                url &&\r\n                <div\r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${url})`\r\n                    }}\r\n                >\r\n                </div>\r\n            }\r\n\r\n\r\n\r\n            <div\r\n                className=\"journal__entry-body\"\r\n            >\r\n                <p className=\"journal__entry-title\"> {title}</p>\r\n                <p className=\"journal__entry-content\">{body}</p>\r\n            </div>\r\n            <div className=\"journal__entry-date-box\">\r\n                <span> {noteDate.format('dddd')} </span>\r\n                <h4>{noteDate.format('D')}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    let { notes } = useSelector(state => state.notes);\r\n\r\n    return (\r\n\r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map(note => (\r\n                    <JournalEntry\r\n                        key={note.id}\r\n                        {...note}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n\r\n        dispatch(startLogout());\r\n\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n\r\n        dispatch( startNewNote() );\r\n\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> {name}</span>\r\n                </h3>\r\n\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n            <div\r\n                className=\"journal__new-entry\"\r\n                onClick={handleAddNew}\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">New Entry</p>\r\n            </div>\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn\">\r\n            <Sidebar />\r\n\r\n            <main>\r\n                {\r\n                    (active)\r\n                        ? (<NoteScreen />)\r\n                        : (<NothingSelected />)\r\n                }\r\n\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport validator from 'validator';\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading } = useSelector(state => state.ui);\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: 's@gmail.com',\r\n        password: '123456'\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        if (isFormValid()) {\r\n            dispatch(startLoginEmailPassword(email, password));\r\n        }\r\n\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n\r\n        dispatch(startGoogleLogin());\r\n\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if (!validator.isEmail(email)) {\r\n            const err = 'Email is not valid';\r\n            Swal.fire('Error', err, 'error');\r\n            dispatch(setError(err));\r\n            return false;\r\n\r\n        } else if (password.length < 5) {\r\n            const err = 'Password should be at least 6 characters';\r\n            Swal.fire('Error', err, 'error');\r\n            dispatch(setError(err));\r\n            return false;\r\n        }\r\n        dispatch(removeError());\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <h3 className=\"auth__title mb-5\">Login</h3>\r\n\r\n            <form onSubmit={handleLogin}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={loading}\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n\r\n                    <div\r\n                        className=\"google-btn\"\r\n                        disabled={loading}\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link\r\n                    className=\"link\"\r\n                    to=\"/auth/register\"\r\n                >\r\n                    Create new account\r\n                </Link>\r\n\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport validator from 'validator';\r\nimport { useDispatch } from 'react-redux';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //const { msgError } = useSelector(state => state.ui);\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        name: 'Steeven',\r\n        email: 's@gmail.com',\r\n        password: '123456',\r\n        password2: '123456'\r\n    });\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (isFormValid()) {\r\n            dispatch(startRegisterWithEmailPasswordName( email, password, name));\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if (name.trim().length === 0) {\r\n            const err = 'Name is required';\r\n            Swal.fire('Error', err, 'error');\r\n            dispatch(setError(err));\r\n            return false;\r\n\r\n        } else if (!validator.isEmail(email)) {\r\n            const err = 'Email is not valid';\r\n            Swal.fire('Error', err, 'error');\r\n            dispatch(setError(err));\r\n            return false;\r\n\r\n        } else if (password !== password2 || password.length < 5) {\r\n            const err = 'Password should be at least 6 characters and match each other';\r\n            Swal.fire('Error', err, 'error');\r\n            dispatch(setError(err));\r\n            return false;\r\n        }\r\n        dispatch(removeError());\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <h3 className=\"auth__title mb-5\">Register</h3>\r\n\r\n            <form onSubmit={handleRegister}>\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Register\r\n            </button>\r\n\r\n\r\n                <Link\r\n                    className=\"link\"\r\n                    to=\"/auth/login\"\r\n                >\r\n                    Already registered?...\r\n            </Link>\r\n\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { LoginScreen } from '../auth/LoginScreen'\r\nimport { RegisterScreen } from '../auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route path=\"/auth/login\" component={LoginScreen}></Route>\r\n                    <Route path=\"/auth/register\" component={RegisterScreen}></Route>\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n\r\n            {...rest}\r\n            component={(props) => (\r\n\r\n                (isAuthenticated)\r\n                    ? <Component {...props} />\r\n                    : <Redirect to='/auth/login' />\r\n            )}\r\n\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n\r\n            {...rest}\r\n            component={(props) => (\r\n                (isAuthenticated)\r\n                    ? <Redirect to='/' />\r\n                    : <Component {...props} />\r\n            )}\r\n\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { BrowserRouter as Router, Switch } from 'react-router-dom'\r\nimport { login } from '../../actions/auth';\r\nimport { startLodingNotes } from '../../actions/notes';\r\nimport { firebase } from '../../firebase/firebase-config';\r\nimport { JournalScreen } from '../journal/JournalScreen'\r\nimport { AuthRouter } from './AuthRouter'\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //Para mantener el estado del login\r\n    const [checking, setChecking] = useState(true);\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    //Se lanza cada vez que se cambia el usuario autenticado\r\n    useEffect(() => {\r\n\r\n        firebase.auth().onAuthStateChanged( async(user) => {\r\n\r\n            if (user?.uid) {\r\n                dispatch(login(user.uid, user.displayName));\r\n\r\n                setIsLoggedIn( true );\r\n\r\n                dispatch( startLodingNotes( user.uid ) );\r\n\r\n            }else{\r\n                setIsLoggedIn(false);\r\n            }\r\n\r\n            setChecking(false);\r\n        })\r\n\r\n    }, [dispatch, setChecking, setIsLoggedIn]);\r\n//se muestra una pantalla de espera mientras se autentica en firebase\r\n    if( checking ){\r\n        return (\r\n            <h1>Wait...</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute isAuthenticated={isLoggedIn} path=\"/auth\" component={AuthRouter}>\r\n                    </PublicRoute>\r\n                    <PrivateRoute isAuthenticated={isLoggedIn} path=\"/\" component={JournalScreen}>\r\n                    </PrivateRoute>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        case types.uiRemoveSetError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","\r\n/*\r\n{\r\n    notes: [],\r\n    active: null,\r\n    active: : {\r\n        id: ...,\r\n        title: '',\r\n        body: '',\r\n        imageUrl: '',\r\n        date: 12341341\r\n    }\r\n}\r\n*/\r\n\r\nimport { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id ? action.payload.note : note\r\n                )\r\n            }\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload)\r\n            }\r\n        case types.notesLogeoutCleaning:\r\n            return{\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","\r\nimport thunk from 'redux-thunk';\r\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\n//permite hacer peticiones asíncronas en redux\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","import { types } from \"../types/types\";\r\n\r\n\r\n\r\n\r\nexport const authReducer = (state = { }, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        case types.logout:\r\n            return { };\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\nimport { AppRouter } from './components/routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\n\nimport './styles/styles.scss';\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}